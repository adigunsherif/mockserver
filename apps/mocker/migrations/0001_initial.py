# Generated by Django 4.2 on 2023-04-04 13:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Server",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=200, unique=True)),
                ("base_path", models.CharField(max_length=200)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Endpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("endpoint_path", models.CharField(max_length=200)),
                (
                    "response_type",
                    models.CharField(
                        choices=[("application/json", "Json"), ("text/plain", "Text")],
                        default="application/json",
                        max_length=100,
                    ),
                ),
                ("response_body", models.TextField()),
                (
                    "status_code",
                    models.IntegerField(
                        choices=[
                            (100, "Http 100 Continue"),
                            (101, "Http 101 Switching Protocols"),
                            (200, "Http 200 Ok"),
                            (201, "Http 201 Created"),
                            (202, "Http 202 Accepted"),
                            (203, "Http 203 Non Authoritative Information"),
                            (204, "Http 204 No Content"),
                            (205, "Http 205 Reset Content"),
                            (206, "Http 206 Partial Content"),
                            (300, "Http 300 Multiple Choices"),
                            (301, "Http 301 Moved Permanently"),
                            (302, "Http 302 Found"),
                            (303, "Http 303 See Other"),
                            (304, "Http 304 Not Modified"),
                            (305, "Http 305 Use Proxy"),
                            (306, "Http 306 Reserved"),
                            (307, "Http 307 Temporary Redirect"),
                            (400, "Http 400 Bad Request"),
                            (401, "Http 401 Unauthorized"),
                            (402, "Http 402 Payment Required"),
                            (403, "Http 403 Forbidden"),
                            (404, "Http 404 Not Found"),
                            (405, "Http 405 Method Not Allowed"),
                            (406, "Http 406 Not Acceptable"),
                            (407, "Http 407 Proxy Authentication Required"),
                            (408, "Http 408 Request Timeout"),
                            (409, "Http 409 Conflict"),
                            (410, "Http 410 Gone"),
                            (411, "Http 411 Length Required"),
                            (412, "Http 412 Precondition Failed"),
                            (413, "Http 413 Request Entity Too Large"),
                            (414, "Http 414 Request Uri Too Long"),
                            (415, "Http 415 Unsupported Media Type"),
                            (416, "Http 416 Requested Range Not Satisfiable"),
                            (417, "Http 417 Expectation Failed"),
                            (422, "Http 422 Unprocessable Entity"),
                            (423, "Http 423 Locked"),
                            (424, "Http 424 Failed Dependency"),
                            (426, "Http 426 Upgrade Required"),
                            (428, "Http 428 Precondition Required"),
                            (429, "Http 429 Too Many Requests"),
                            (431, "Http 431 Request Header Fields Too Large"),
                            (451, "Http 451 Unavailable For Legal Reasons"),
                            (500, "Http 500 Internal Server Error"),
                            (501, "Http 501 Not Implemented"),
                            (502, "Http 502 Bad Gateway"),
                            (503, "Http 503 Service Unavailable"),
                            (504, "Http 504 Gateway Timeout"),
                            (505, "Http 505 Http Version Not Supported"),
                            (506, "Http 506 Variant Also Negotiates"),
                            (507, "Http 507 Insufficient Storage"),
                            (508, "Http 508 Loop Detected"),
                            (509, "Http 509 Bandwidth Limit Exceeded"),
                            (510, "Http 510 Not Extended"),
                            (511, "Http 511 Network Authentication Required"),
                        ],
                        default=200,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)ss",
                        related_query_name="%(app_label)s_%(class)ss",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
